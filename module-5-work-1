
 

<!DOCTYPE HTML>
<!--
	Forty by HTML5 UP
	html5up.net | @ajlkn
	Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
-->
<html>
	<head>
		<title>Module X: Assignment Y</title>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
		<link rel="stylesheet" href="assets/css/main.css" />
		<noscript><link rel="stylesheet" href="assets/css/noscript.css" /></noscript>
	</head>
	<body class="is-preload">

		<!-- Wrapper -->
			<div id="wrapper">

				<!-- Header -->
					<header id="header">
						<a href="index.html" class="logo"><strong>Rich</strong> <span>Orrell</span></a>
						<nav>
							<a href="#menu">Menu</a>
						</nav>
					</header>

			<!-- Main -->
				<div id="main" class="alt">

										<!-- One -->
											<section id="one">
												<div class="inner">
													<header class="major">
														<h1>Collaborative Discussion: Project Failure Study</h1>
													</header>

													<!-- Content -->

														<div class="col-6 col-12-medium">
															<h2 id="content">Assignment brief</h2>
															<p>My first piece of work for the Secure Software Development module was to create a UML diagram outlining one of the coding weaknesses identified by OWASP. The diagram had to be accompanied by a 200 word description of why the UML model I used is the most appropriate choice. I decided to detail SQL injection using a sequence diagram. My submission is below.</p>

															<div class="row gtr-200">
																<div class="col-6 col-12-medium">
																	<div class="row">
																		<h3>Submission</h3>
																		<p>OI believe the three most common reasons for the failure of a project are as follows: 
-	Poor cooperation/ communication
Working in a team on a project will invariably involve delegating work amongst team members and communicating the status of the work each member is undertaking. If this is not done in a coherent and effective manner, then it risks work being duplicated or forgotten entirely. There can be particular emphasis on this in a software development context, where components being worked on will likely need to be able to communicate with each other.
-	Task difficulty
Even if a project team are fully cooperating and communicating with each other, if tasks within the project are beyond the skills or knowledge of the team members then it will be very difficult to complete them. This can be circumvented with training or hiring of members with experience in the field, however if time or budget are a factor in the project then this is likely not viable.
-	Task priority
When working within a budget or strict timeframe, task prioritisation is a very important factor which needs to be considered. Being able to identify which tasks are more important to the software functionality, or which might need additional/specialised resourcing will help a project run much more efficiently. Is it more important to ensure that core functionality is in place, rather than fixing or refining more peripheral components.

Examples of failed projects due to these factors:
-	Apple AirPower
This was an ambitious project which Apple unveiled in March 2019. It promised to be a wireless charging matt which would let users charge their devices placed on the device without it needing to be on a specific place on the matt. This was eventually cancelled by Apple due to the difficulty of the promises they had made. The close proximity of so many wireless charging components lead to device overheating.
-	Ford Edsel
Ford spent 10 years and $250 million on development and planning to release the Edsel, but by the time it was released they were no longer ahead of the market. Delays due to poor internal communication lead to the failure of the product.

														 </div>
